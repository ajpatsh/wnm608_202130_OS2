/* css resets - to homogenize default browser settings */

*, *::before, *::after {
	box-sizing:border-box; /*helps with structure*/
}

:root {
	--color-neutral-light:#f6f6f6;
	--color-neutral-medium:#c5c5c5;
	--color-neutral-dark:#313131; /* there are plugins you can get to help with colors in sublime text */

	--color-white:#fff;
	--color-black:#111;


	--header-height:3rem; /* rem=root em is always relative to the root element (useful for paddings, borders, and margins, etc.); ems are always relative to the parent and can change (elements that are outside of the root elements) */


	--font-sans: Helvetica, Arial, sans-serif;
	--font-serif: Cambria, Georgia, "Times New Roman", serif; /* quotes are only necessary in font names that have spaces */
}

body {
	margin:0; /* everything goes all the way to the edge of the page */
	font-size:100%; /* of whatever user has set on their browser - don't use pixels for font sizes */
	font-family:var(--font-sans);  /* Helvetica, Arial, sans-serif; = graceful degradation */
}

h1, /* to copy a line, click onto the line and click Cmd C, then Cmd V */
h2,
h3,
h4,
h5,
h6 {
	font-family:var(--font-serif);
}

a {
	color:inherit; /* inherit takes on whatever it's parent was, and doesn't need to be set explicitly - means some values have own values set on them by default by the browser, but you can also say the new default is to inherit from whatever the parent was */
	font-weight:bold;
	text-decoration:none;
}
a:hover {
	text-decoration:underline;
}





/* LAYOUT CLASSES - only for placement (the wood beams of the house, not the colorful walls) */

.container {
	max-width:1000px;
	margin-left:auto;
	margin-right:auto; /* don't use margin auto0 here, and don't set top or bottom margins here */
}
/* should only make a part of the document a partcular size and center it in the page */


.hidden{ display:none; }

/* Don't ever want to edit when they are listed on a single line */
.display-flex { display:flex; }
.display-block { display:block; }
.display-inline-flex { display:inline-flex; }
.display-inline-block { display:inline-block; }

/* flex child classes */
.flex-stretch { flex: 1 1 auto; } /* will all grow and shrink at same rate, based on original width of the element */
.flex-none { flex: none; } /* the element itself doesn't stretch, but still part of a flexing parent */

.flex-align-center { align-items:center; } /* will go across the flexing axis - right/left? */
.flex-justify-center { justify-content:center; } /* will go along the flexing axis - up/down? */






/* COMPONENT CLASSES -bigger chunks of CSS design */

.navbar {
	background-color:var(--color-neutral-dark);
	color:var(--color-white);
	line-height:var(--header-height);
}

.navbar h1 {
	font-family:var(--font-sans);
	font-size:1em;
	margin:0;
}

.nav ul,
.navbar ul {
	list-style-type:none; /* gets rid of the bullet points */
	margin:0;
	padding-left:0;
}

.navbar a {
	display:block; /* makes the a the full size of the nav bar, easier to click */
	padding:0 0.5em;
}




/* VIEW WINDOW -useful for showing a big image on page with content in the middle */

.view-window {
	position:relative; /* allows to position absolutely the children inside of this */
	overflow:hidden; /* allows to animate out of and into it's space, but not affect it's size */

	background-size:cover;
	background-position:center;
	background-attachment:fixed; /* the view window itself doesn't have a background image in it */

	height:70vh; /* vh=viewport height - a value of 1vh is equal to 1% of the viewport height; vw=viewport width; vmax=viewport maximum; vmin=viewport minimum */
}




/* CARD */

.card {
	background-color:var(--color-white);
	padding:1em;

	margin-bottom:1em;
	margin-top:1em;

	position:relative; /* things can be positioned inside of it */
	overflow:hidden; /*things can be animated out of it and animated back into it */
}




.card.soft {
	border-radius:0.5em;
	box-shadow:3px 4px 10px 3px rgb(0, 0, 0, .08); /* type 0 0 0 black then inspect the card */
}

.card.hard {
	border-radius:0.2em;
	border:2px solid var(--color-neutral-medium);
}

.card.dark {
	background-color:var(--color-neutral-dark);
	color:var(--color-white);
}

.card.medium {
	background-color:var(--color-neutral-medium);
}

.card.flat {
	padding:0;
}

.card.features {
	background-color:var(--color-white);
	box-shadow:3px 4px 10px 3px rgb(0, 0, 0, .08);
	border-radius:0.5em;
	margin: 2em 1em 1em 1em;
	width: 95%;
	padding: 2em;
	text-align: center;
	color: black;
	float: left;

}

.card>:first-child { margin-top:0; }
.card>:last-child {margin-bottom:0;}



/* WELL - shows layout but doesn't have content */
.well {
	background-color:var(--color-neutral-medium);
	padding:0.5em;
	border-radius:0.2em;
}




/* BUTTONS */

.button.dark {
	background-color: var(--color-neutral-dark);
	border:none;
	color:white;
	padding: 1em 2em;
	text-align:center;
	text-decoration:none;
	display:inline-block;
	font-size:1.5em;
}

.button.light {
	background-color: var(--color-neutral-light);
	border:none;
	color:black;
	padding: 1em 2em;
	text-align:center;
	text-decoration:none;
	display:inline-block;
	font-size:1.5em;
}

.button.round {
	border-radius: .5em;
	background-color:var(--color-black);
	color:var(--color-white);
	padding:1em;
}